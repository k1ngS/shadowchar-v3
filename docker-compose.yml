services:
  db:
    image: postgres:15-alpine
    container_name: shadowchar_db
    environment:
      POSTGRES_DB: shadowchar
      POSTGRES_USER: shadowchar
      POSTGRES_PASSWORD: shadowchar123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shadowchar"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shadowchar_backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://shadowchar:shadowchar123@db:5433/shadowchar
      SECRET_KEY: your-super-secret-key-here-change-in-production
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_cache:/app/__pycache__
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shadowchar_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules  # Volume nomeado para node_modules
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  backend_cache:
  frontend_node_modules:  # Volume para evitar conflitos

networks:
  default:
    name: shadowchar_network
